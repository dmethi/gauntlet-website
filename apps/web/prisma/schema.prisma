generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model League {
  id              String   @id
  name            String
  season          String
  totalRosters    Int
  status          String
  settings        Json?
  scoringSettings Json?
  rosterPositions String[]

  rosters         Roster[]
  matchups        Matchup[]
  transactions    Transaction[]
  drafts          Draft[]
  weeklyMetrics   WeeklyMetrics[]

  @@index([season])
}

model User {
  id          String   @id
  username    String   @unique
  displayName String?
  avatar      String?
  metadata    Json?

  rosters     Roster[]
  transactions Transaction[] @relation("Creator")
}

model Roster {
  id             Int      @id
  leagueId       String
  league         League   @relation(fields: [leagueId], references: [id])
  ownerId        String?
  owner          User?    @relation(fields: [ownerId], references: [id])
  players        String[]
  starters       String[]
  reserve        String[]
  settings       Json?
  metadata       Json?
  waiverBudget   Int      @default(100)
  waiverPosition Int?

  matchups       Matchup[]
  weeklyMetrics  WeeklyMetrics[]

  @@index([leagueId])
  @@index([ownerId])
}

model Matchup {
  id            String   @id @default(cuid())
  leagueId      String
  league        League   @relation(fields: [leagueId], references: [id])
  week          Int
  rosterId      Int
  roster        Roster   @relation(fields: [rosterId], references: [id])
  matchupId     Int?
  points        Float    @default(0)
  customPoints  Float?
  starters      String[]
  startersPoints Json?
  players       String[]
  playersPoints Json?

  @@unique([leagueId, week, rosterId])
  @@index([leagueId, week])
}

model WeeklyMetrics {
  id                String   @id @default(cuid())
  leagueId         String
  league           League   @relation(fields: [leagueId], references: [id])
  rosterId         Int
  roster           Roster   @relation(fields: [rosterId], references: [id])
  week             Int
  totalPoints      Float
  expectedWins     Float
  luckRating      Float
  opponentPoints   Float

  @@unique([leagueId, rosterId, week])
  @@index([leagueId, week])
  @@index([rosterId, week])
}

model Transaction {
  id            String   @id
  leagueId      String
  league        League   @relation(fields: [leagueId], references: [id])
  type          String
  status        String
  creatorId     String
  creator       User     @relation("Creator", fields: [creatorId], references: [id])
  rosterIds     Int[]
  adds          Json?
  drops         Json?
  draftPicks    Json?
  waiver        Json?
  settings      Json?
  leg           Int?
  consenterIds  String[]

  @@index([leagueId])
  @@index([creatorId])
}

model Draft {
  id             String   @id
  leagueId       String
  league         League   @relation(fields: [leagueId], references: [id])
  type          String
  status        String
  season        String
  settings      Json?
  slotToRosterId Int[]
  metadata      Json?

  @@index([leagueId])
  @@index([season])
} 